generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  favorites     String[]  @default([])
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Mentions {
  id            String    @id
  url           String?
  authorId      String
  publicationId String
  originalText  String?
  mentionText   String?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime?
}

model MentionsBlock {
  id            String    @id
  url           String?
  authorId      String
  publicationId String
  originalText  String?
  mentionText   String?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime?
}

model TikTok {
  id            String    @id
  access_token  String
  refresh_token String
  createdAt     DateTime? @default(now())
  updatedAt     DateTime?
}

model Twitter {
  id        String    @id
  url       String?
  caption   String?
  size      Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime?
}
